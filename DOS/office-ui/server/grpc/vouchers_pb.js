// source: vouchers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.dylk.Event', null, global);
goog.exportSymbol('proto.dylk.Incidence', null, global);
goog.exportSymbol('proto.dylk.Item', null, global);
goog.exportSymbol('proto.dylk.PatioVoucher', null, global);
goog.exportSymbol('proto.dylk.Voucher', null, global);
goog.exportSymbol('proto.dylk.VoucherGeneralResponse', null, global);
goog.exportSymbol('proto.dylk.VoucherId', null, global);
goog.exportSymbol('proto.dylk.VoucherListResponse', null, global);
goog.exportSymbol('proto.dylk.VoucherParam', null, global);
goog.exportSymbol('proto.dylk.VoucherParams', null, global);
goog.exportSymbol('proto.dylk.VoucherResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.Item.displayName = 'proto.dylk.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.PatioVoucher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.PatioVoucher.repeatedFields_, null);
};
goog.inherits(proto.dylk.PatioVoucher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.PatioVoucher.displayName = 'proto.dylk.PatioVoucher';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.Incidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.Incidence.repeatedFields_, null);
};
goog.inherits(proto.dylk.Incidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.Incidence.displayName = 'proto.dylk.Incidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.Event.displayName = 'proto.dylk.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.Voucher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.Voucher.repeatedFields_, null);
};
goog.inherits(proto.dylk.Voucher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.Voucher.displayName = 'proto.dylk.Voucher';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.VoucherId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.VoucherId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.VoucherId.displayName = 'proto.dylk.VoucherId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.VoucherParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.VoucherParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.VoucherParam.displayName = 'proto.dylk.VoucherParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.VoucherParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.VoucherParams.repeatedFields_, null);
};
goog.inherits(proto.dylk.VoucherParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.VoucherParams.displayName = 'proto.dylk.VoucherParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.VoucherResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.VoucherResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.VoucherResponse.displayName = 'proto.dylk.VoucherResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.VoucherListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.VoucherListResponse.repeatedFields_, null);
};
goog.inherits(proto.dylk.VoucherListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.VoucherListResponse.displayName = 'proto.dylk.VoucherListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.VoucherGeneralResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.VoucherGeneralResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.VoucherGeneralResponse.displayName = 'proto.dylk.VoucherGeneralResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    equipmentcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.Item}
 */
proto.dylk.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.Item;
  return proto.dylk.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.Item}
 */
proto.dylk.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEquipmentcode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEquipmentcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string equipmentCode = 1;
 * @return {string}
 */
proto.dylk.Item.prototype.getEquipmentcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Item} returns this
 */
proto.dylk.Item.prototype.setEquipmentcode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.dylk.Item.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.Item} returns this
 */
proto.dylk.Item.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.PatioVoucher.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.PatioVoucher.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.PatioVoucher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.PatioVoucher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.PatioVoucher.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    voucherid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    patiocode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    observations: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deliveredby: jspb.Message.getFieldWithDefault(msg, 5, ""),
    receivedby: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    itemlistList: jspb.Message.toObjectList(msg.getItemlistList(),
    proto.dylk.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.PatioVoucher}
 */
proto.dylk.PatioVoucher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.PatioVoucher;
  return proto.dylk.PatioVoucher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.PatioVoucher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.PatioVoucher}
 */
proto.dylk.PatioVoucher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVoucherid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatiocode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setObservations(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeliveredby(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceivedby(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = new proto.dylk.Item;
      reader.readMessage(value,proto.dylk.Item.deserializeBinaryFromReader);
      msg.addItemlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.PatioVoucher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.PatioVoucher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.PatioVoucher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.PatioVoucher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVoucherid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPatiocode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getObservations();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeliveredby();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReceivedby();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getItemlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.dylk.Item.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dylk.PatioVoucher.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.PatioVoucher} returns this
 */
proto.dylk.PatioVoucher.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 voucherId = 2;
 * @return {number}
 */
proto.dylk.PatioVoucher.prototype.getVoucherid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.PatioVoucher} returns this
 */
proto.dylk.PatioVoucher.prototype.setVoucherid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string patioCode = 3;
 * @return {string}
 */
proto.dylk.PatioVoucher.prototype.getPatiocode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.PatioVoucher} returns this
 */
proto.dylk.PatioVoucher.prototype.setPatiocode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string observations = 4;
 * @return {string}
 */
proto.dylk.PatioVoucher.prototype.getObservations = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.PatioVoucher} returns this
 */
proto.dylk.PatioVoucher.prototype.setObservations = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string deliveredBy = 5;
 * @return {string}
 */
proto.dylk.PatioVoucher.prototype.getDeliveredby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.PatioVoucher} returns this
 */
proto.dylk.PatioVoucher.prototype.setDeliveredby = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string receivedBy = 6;
 * @return {string}
 */
proto.dylk.PatioVoucher.prototype.getReceivedby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.PatioVoucher} returns this
 */
proto.dylk.PatioVoucher.prototype.setReceivedby = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string status = 7;
 * @return {string}
 */
proto.dylk.PatioVoucher.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.PatioVoucher} returns this
 */
proto.dylk.PatioVoucher.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated Item itemList = 8;
 * @return {!Array<!proto.dylk.Item>}
 */
proto.dylk.PatioVoucher.prototype.getItemlistList = function() {
  return /** @type{!Array<!proto.dylk.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.Item, 8));
};


/**
 * @param {!Array<!proto.dylk.Item>} value
 * @return {!proto.dylk.PatioVoucher} returns this
*/
proto.dylk.PatioVoucher.prototype.setItemlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.dylk.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.Item}
 */
proto.dylk.PatioVoucher.prototype.addItemlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.dylk.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.PatioVoucher} returns this
 */
proto.dylk.PatioVoucher.prototype.clearItemlistList = function() {
  return this.setItemlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.Incidence.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.Incidence.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.Incidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.Incidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Incidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    voucherid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    platform: jspb.Message.getFieldWithDefault(msg, 3, ""),
    carriercode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    patiocode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    observations: jspb.Message.getFieldWithDefault(msg, 6, ""),
    unitcode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    inspectedby: jspb.Message.getFieldWithDefault(msg, 8, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 9, ""),
    status: jspb.Message.getFieldWithDefault(msg, 10, ""),
    itemlistList: jspb.Message.toObjectList(msg.getItemlistList(),
    proto.dylk.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.Incidence}
 */
proto.dylk.Incidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.Incidence;
  return proto.dylk.Incidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.Incidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.Incidence}
 */
proto.dylk.Incidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVoucherid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarriercode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatiocode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setObservations(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitcode(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectedby(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperator(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 11:
      var value = new proto.dylk.Item;
      reader.readMessage(value,proto.dylk.Item.deserializeBinaryFromReader);
      msg.addItemlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.Incidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.Incidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.Incidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Incidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVoucherid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCarriercode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPatiocode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getObservations();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUnitcode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInspectedby();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOperator();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getItemlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.dylk.Item.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dylk.Incidence.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 voucherId = 2;
 * @return {number}
 */
proto.dylk.Incidence.prototype.getVoucherid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setVoucherid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string platform = 3;
 * @return {string}
 */
proto.dylk.Incidence.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string carrierCode = 4;
 * @return {string}
 */
proto.dylk.Incidence.prototype.getCarriercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setCarriercode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string patioCode = 5;
 * @return {string}
 */
proto.dylk.Incidence.prototype.getPatiocode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setPatiocode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string observations = 6;
 * @return {string}
 */
proto.dylk.Incidence.prototype.getObservations = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setObservations = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string unitCode = 7;
 * @return {string}
 */
proto.dylk.Incidence.prototype.getUnitcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setUnitcode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string inspectedBy = 8;
 * @return {string}
 */
proto.dylk.Incidence.prototype.getInspectedby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setInspectedby = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string operator = 9;
 * @return {string}
 */
proto.dylk.Incidence.prototype.getOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setOperator = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string status = 10;
 * @return {string}
 */
proto.dylk.Incidence.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated Item itemList = 11;
 * @return {!Array<!proto.dylk.Item>}
 */
proto.dylk.Incidence.prototype.getItemlistList = function() {
  return /** @type{!Array<!proto.dylk.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.Item, 11));
};


/**
 * @param {!Array<!proto.dylk.Item>} value
 * @return {!proto.dylk.Incidence} returns this
*/
proto.dylk.Incidence.prototype.setItemlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.dylk.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.Item}
 */
proto.dylk.Incidence.prototype.addItemlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.dylk.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.Incidence} returns this
 */
proto.dylk.Incidence.prototype.clearItemlistList = function() {
  return this.setItemlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    document: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    operation: jspb.Message.getFieldWithDefault(msg, 4, ""),
    platform: jspb.Message.getFieldWithDefault(msg, 5, ""),
    patiocode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    observations: jspb.Message.getFieldWithDefault(msg, 7, ""),
    unitcode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    originuser: jspb.Message.getFieldWithDefault(msg, 9, ""),
    targetuser: jspb.Message.getFieldWithDefault(msg, 10, ""),
    status: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.Event}
 */
proto.dylk.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.Event;
  return proto.dylk.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.Event}
 */
proto.dylk.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocument(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocumentid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatiocode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setObservations(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitcode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginuser(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetuser(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getDocument();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getOperation();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPatiocode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getObservations();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUnitcode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOriginuser();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTargetuser();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional double timestamp = 1;
 * @return {number}
 */
proto.dylk.Event.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string document = 2;
 * @return {string}
 */
proto.dylk.Event.prototype.getDocument = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setDocument = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 documentId = 3;
 * @return {number}
 */
proto.dylk.Event.prototype.getDocumentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setDocumentid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string operation = 4;
 * @return {string}
 */
proto.dylk.Event.prototype.getOperation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setOperation = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string platform = 5;
 * @return {string}
 */
proto.dylk.Event.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string patioCode = 6;
 * @return {string}
 */
proto.dylk.Event.prototype.getPatiocode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setPatiocode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string observations = 7;
 * @return {string}
 */
proto.dylk.Event.prototype.getObservations = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setObservations = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string unitCode = 8;
 * @return {string}
 */
proto.dylk.Event.prototype.getUnitcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setUnitcode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string originUser = 9;
 * @return {string}
 */
proto.dylk.Event.prototype.getOriginuser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setOriginuser = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string targetUser = 10;
 * @return {string}
 */
proto.dylk.Event.prototype.getTargetuser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setTargetuser = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string status = 11;
 * @return {string}
 */
proto.dylk.Event.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Event} returns this
 */
proto.dylk.Event.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.Voucher.repeatedFields_ = [10,11,12,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.Voucher.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.Voucher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.Voucher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Voucher.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    platform: jspb.Message.getFieldWithDefault(msg, 2, ""),
    carriercode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    patiocode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    observations: jspb.Message.getFieldWithDefault(msg, 5, ""),
    unitcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deliveredby: jspb.Message.getFieldWithDefault(msg, 7, ""),
    receivedby: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, ""),
    itemlistList: jspb.Message.toObjectList(msg.getItemlistList(),
    proto.dylk.Item.toObject, includeInstance),
    patiovoucherlistList: jspb.Message.toObjectList(msg.getPatiovoucherlistList(),
    proto.dylk.PatioVoucher.toObject, includeInstance),
    incidencelistList: jspb.Message.toObjectList(msg.getIncidencelistList(),
    proto.dylk.Incidence.toObject, includeInstance),
    eventlistList: jspb.Message.toObjectList(msg.getEventlistList(),
    proto.dylk.Event.toObject, includeInstance),
    generationtime: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    lasttouchtime: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.Voucher}
 */
proto.dylk.Voucher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.Voucher;
  return proto.dylk.Voucher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.Voucher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.Voucher}
 */
proto.dylk.Voucher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarriercode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatiocode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setObservations(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeliveredby(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceivedby(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 10:
      var value = new proto.dylk.Item;
      reader.readMessage(value,proto.dylk.Item.deserializeBinaryFromReader);
      msg.addItemlist(value);
      break;
    case 11:
      var value = new proto.dylk.PatioVoucher;
      reader.readMessage(value,proto.dylk.PatioVoucher.deserializeBinaryFromReader);
      msg.addPatiovoucherlist(value);
      break;
    case 12:
      var value = new proto.dylk.Incidence;
      reader.readMessage(value,proto.dylk.Incidence.deserializeBinaryFromReader);
      msg.addIncidencelist(value);
      break;
    case 13:
      var value = new proto.dylk.Event;
      reader.readMessage(value,proto.dylk.Event.deserializeBinaryFromReader);
      msg.addEventlist(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGenerationtime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLasttouchtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.Voucher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.Voucher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.Voucher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Voucher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCarriercode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPatiocode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getObservations();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUnitcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeliveredby();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReceivedby();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getItemlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.dylk.Item.serializeBinaryToWriter
    );
  }
  f = message.getPatiovoucherlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.dylk.PatioVoucher.serializeBinaryToWriter
    );
  }
  f = message.getIncidencelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.dylk.Incidence.serializeBinaryToWriter
    );
  }
  f = message.getEventlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.dylk.Event.serializeBinaryToWriter
    );
  }
  f = message.getGenerationtime();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getLasttouchtime();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dylk.Voucher.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string platform = 2;
 * @return {string}
 */
proto.dylk.Voucher.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string carrierCode = 3;
 * @return {string}
 */
proto.dylk.Voucher.prototype.getCarriercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setCarriercode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string patioCode = 4;
 * @return {string}
 */
proto.dylk.Voucher.prototype.getPatiocode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setPatiocode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string observations = 5;
 * @return {string}
 */
proto.dylk.Voucher.prototype.getObservations = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setObservations = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string unitCode = 6;
 * @return {string}
 */
proto.dylk.Voucher.prototype.getUnitcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setUnitcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string deliveredBy = 7;
 * @return {string}
 */
proto.dylk.Voucher.prototype.getDeliveredby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setDeliveredby = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string receivedBy = 8;
 * @return {string}
 */
proto.dylk.Voucher.prototype.getReceivedby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setReceivedby = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string status = 9;
 * @return {string}
 */
proto.dylk.Voucher.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated Item itemList = 10;
 * @return {!Array<!proto.dylk.Item>}
 */
proto.dylk.Voucher.prototype.getItemlistList = function() {
  return /** @type{!Array<!proto.dylk.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.Item, 10));
};


/**
 * @param {!Array<!proto.dylk.Item>} value
 * @return {!proto.dylk.Voucher} returns this
*/
proto.dylk.Voucher.prototype.setItemlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.dylk.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.Item}
 */
proto.dylk.Voucher.prototype.addItemlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.dylk.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.clearItemlistList = function() {
  return this.setItemlistList([]);
};


/**
 * repeated PatioVoucher patioVoucherList = 11;
 * @return {!Array<!proto.dylk.PatioVoucher>}
 */
proto.dylk.Voucher.prototype.getPatiovoucherlistList = function() {
  return /** @type{!Array<!proto.dylk.PatioVoucher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.PatioVoucher, 11));
};


/**
 * @param {!Array<!proto.dylk.PatioVoucher>} value
 * @return {!proto.dylk.Voucher} returns this
*/
proto.dylk.Voucher.prototype.setPatiovoucherlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.dylk.PatioVoucher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.PatioVoucher}
 */
proto.dylk.Voucher.prototype.addPatiovoucherlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.dylk.PatioVoucher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.clearPatiovoucherlistList = function() {
  return this.setPatiovoucherlistList([]);
};


/**
 * repeated Incidence incidenceList = 12;
 * @return {!Array<!proto.dylk.Incidence>}
 */
proto.dylk.Voucher.prototype.getIncidencelistList = function() {
  return /** @type{!Array<!proto.dylk.Incidence>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.Incidence, 12));
};


/**
 * @param {!Array<!proto.dylk.Incidence>} value
 * @return {!proto.dylk.Voucher} returns this
*/
proto.dylk.Voucher.prototype.setIncidencelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.dylk.Incidence=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.Incidence}
 */
proto.dylk.Voucher.prototype.addIncidencelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.dylk.Incidence, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.clearIncidencelistList = function() {
  return this.setIncidencelistList([]);
};


/**
 * repeated Event eventList = 13;
 * @return {!Array<!proto.dylk.Event>}
 */
proto.dylk.Voucher.prototype.getEventlistList = function() {
  return /** @type{!Array<!proto.dylk.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.Event, 13));
};


/**
 * @param {!Array<!proto.dylk.Event>} value
 * @return {!proto.dylk.Voucher} returns this
*/
proto.dylk.Voucher.prototype.setEventlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.dylk.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.Event}
 */
proto.dylk.Voucher.prototype.addEventlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.dylk.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.clearEventlistList = function() {
  return this.setEventlistList([]);
};


/**
 * optional double generationTime = 14;
 * @return {number}
 */
proto.dylk.Voucher.prototype.getGenerationtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setGenerationtime = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double lastTouchTime = 15;
 * @return {number}
 */
proto.dylk.Voucher.prototype.getLasttouchtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.Voucher} returns this
 */
proto.dylk.Voucher.prototype.setLasttouchtime = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.VoucherId.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.VoucherId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.VoucherId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.VoucherId}
 */
proto.dylk.VoucherId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.VoucherId;
  return proto.dylk.VoucherId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.VoucherId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.VoucherId}
 */
proto.dylk.VoucherId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.VoucherId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.VoucherId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.VoucherId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dylk.VoucherId.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.VoucherId} returns this
 */
proto.dylk.VoucherId.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.VoucherParam.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.VoucherParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.VoucherParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.VoucherParam}
 */
proto.dylk.VoucherParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.VoucherParam;
  return proto.dylk.VoucherParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.VoucherParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.VoucherParam}
 */
proto.dylk.VoucherParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.VoucherParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.VoucherParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.VoucherParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dylk.VoucherParam.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.VoucherParam} returns this
 */
proto.dylk.VoucherParam.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.dylk.VoucherParam.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.VoucherParam} returns this
 */
proto.dylk.VoucherParam.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.VoucherParams.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.VoucherParams.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.VoucherParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.VoucherParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    paramlistList: jspb.Message.toObjectList(msg.getParamlistList(),
    proto.dylk.VoucherParam.toObject, includeInstance),
    pageparamlistList: jspb.Message.toObjectList(msg.getPageparamlistList(),
    proto.dylk.VoucherParam.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.VoucherParams}
 */
proto.dylk.VoucherParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.VoucherParams;
  return proto.dylk.VoucherParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.VoucherParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.VoucherParams}
 */
proto.dylk.VoucherParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dylk.VoucherParam;
      reader.readMessage(value,proto.dylk.VoucherParam.deserializeBinaryFromReader);
      msg.addParamlist(value);
      break;
    case 2:
      var value = new proto.dylk.VoucherParam;
      reader.readMessage(value,proto.dylk.VoucherParam.deserializeBinaryFromReader);
      msg.addPageparamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.VoucherParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.VoucherParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.VoucherParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dylk.VoucherParam.serializeBinaryToWriter
    );
  }
  f = message.getPageparamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.dylk.VoucherParam.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VoucherParam paramList = 1;
 * @return {!Array<!proto.dylk.VoucherParam>}
 */
proto.dylk.VoucherParams.prototype.getParamlistList = function() {
  return /** @type{!Array<!proto.dylk.VoucherParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.VoucherParam, 1));
};


/**
 * @param {!Array<!proto.dylk.VoucherParam>} value
 * @return {!proto.dylk.VoucherParams} returns this
*/
proto.dylk.VoucherParams.prototype.setParamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.dylk.VoucherParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.VoucherParam}
 */
proto.dylk.VoucherParams.prototype.addParamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dylk.VoucherParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.VoucherParams} returns this
 */
proto.dylk.VoucherParams.prototype.clearParamlistList = function() {
  return this.setParamlistList([]);
};


/**
 * repeated VoucherParam pageParamList = 2;
 * @return {!Array<!proto.dylk.VoucherParam>}
 */
proto.dylk.VoucherParams.prototype.getPageparamlistList = function() {
  return /** @type{!Array<!proto.dylk.VoucherParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.VoucherParam, 2));
};


/**
 * @param {!Array<!proto.dylk.VoucherParam>} value
 * @return {!proto.dylk.VoucherParams} returns this
*/
proto.dylk.VoucherParams.prototype.setPageparamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.dylk.VoucherParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.VoucherParam}
 */
proto.dylk.VoucherParams.prototype.addPageparamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dylk.VoucherParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.VoucherParams} returns this
 */
proto.dylk.VoucherParams.prototype.clearPageparamlistList = function() {
  return this.setPageparamlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.VoucherResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.VoucherResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.VoucherResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    returncode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    returnmessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    voucher: (f = msg.getVoucher()) && proto.dylk.Voucher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.VoucherResponse}
 */
proto.dylk.VoucherResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.VoucherResponse;
  return proto.dylk.VoucherResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.VoucherResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.VoucherResponse}
 */
proto.dylk.VoucherResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReturncode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnmessage(value);
      break;
    case 3:
      var value = new proto.dylk.Voucher;
      reader.readMessage(value,proto.dylk.Voucher.deserializeBinaryFromReader);
      msg.setVoucher(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.VoucherResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.VoucherResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.VoucherResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturncode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReturnmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVoucher();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.dylk.Voucher.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 returnCode = 1;
 * @return {number}
 */
proto.dylk.VoucherResponse.prototype.getReturncode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.VoucherResponse} returns this
 */
proto.dylk.VoucherResponse.prototype.setReturncode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string returnMessage = 2;
 * @return {string}
 */
proto.dylk.VoucherResponse.prototype.getReturnmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.VoucherResponse} returns this
 */
proto.dylk.VoucherResponse.prototype.setReturnmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Voucher voucher = 3;
 * @return {?proto.dylk.Voucher}
 */
proto.dylk.VoucherResponse.prototype.getVoucher = function() {
  return /** @type{?proto.dylk.Voucher} */ (
    jspb.Message.getWrapperField(this, proto.dylk.Voucher, 3));
};


/**
 * @param {?proto.dylk.Voucher|undefined} value
 * @return {!proto.dylk.VoucherResponse} returns this
*/
proto.dylk.VoucherResponse.prototype.setVoucher = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dylk.VoucherResponse} returns this
 */
proto.dylk.VoucherResponse.prototype.clearVoucher = function() {
  return this.setVoucher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dylk.VoucherResponse.prototype.hasVoucher = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.VoucherListResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.VoucherListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.VoucherListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.VoucherListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    returncode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    returnmessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    voucherlistList: jspb.Message.toObjectList(msg.getVoucherlistList(),
    proto.dylk.Voucher.toObject, includeInstance),
    totalitems: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalpages: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.VoucherListResponse}
 */
proto.dylk.VoucherListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.VoucherListResponse;
  return proto.dylk.VoucherListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.VoucherListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.VoucherListResponse}
 */
proto.dylk.VoucherListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReturncode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnmessage(value);
      break;
    case 3:
      var value = new proto.dylk.Voucher;
      reader.readMessage(value,proto.dylk.Voucher.deserializeBinaryFromReader);
      msg.addVoucherlist(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalitems(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.VoucherListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.VoucherListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.VoucherListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturncode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReturnmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVoucherlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.dylk.Voucher.serializeBinaryToWriter
    );
  }
  f = message.getTotalitems();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTotalpages();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 returnCode = 1;
 * @return {number}
 */
proto.dylk.VoucherListResponse.prototype.getReturncode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.VoucherListResponse} returns this
 */
proto.dylk.VoucherListResponse.prototype.setReturncode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string returnMessage = 2;
 * @return {string}
 */
proto.dylk.VoucherListResponse.prototype.getReturnmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.VoucherListResponse} returns this
 */
proto.dylk.VoucherListResponse.prototype.setReturnmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Voucher voucherList = 3;
 * @return {!Array<!proto.dylk.Voucher>}
 */
proto.dylk.VoucherListResponse.prototype.getVoucherlistList = function() {
  return /** @type{!Array<!proto.dylk.Voucher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.Voucher, 3));
};


/**
 * @param {!Array<!proto.dylk.Voucher>} value
 * @return {!proto.dylk.VoucherListResponse} returns this
*/
proto.dylk.VoucherListResponse.prototype.setVoucherlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.dylk.Voucher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.Voucher}
 */
proto.dylk.VoucherListResponse.prototype.addVoucherlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.dylk.Voucher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.VoucherListResponse} returns this
 */
proto.dylk.VoucherListResponse.prototype.clearVoucherlistList = function() {
  return this.setVoucherlistList([]);
};


/**
 * optional int32 totalItems = 4;
 * @return {number}
 */
proto.dylk.VoucherListResponse.prototype.getTotalitems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.VoucherListResponse} returns this
 */
proto.dylk.VoucherListResponse.prototype.setTotalitems = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 totalPages = 5;
 * @return {number}
 */
proto.dylk.VoucherListResponse.prototype.getTotalpages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.VoucherListResponse} returns this
 */
proto.dylk.VoucherListResponse.prototype.setTotalpages = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.VoucherGeneralResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.VoucherGeneralResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.VoucherGeneralResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherGeneralResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    returncode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    returnmessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.VoucherGeneralResponse}
 */
proto.dylk.VoucherGeneralResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.VoucherGeneralResponse;
  return proto.dylk.VoucherGeneralResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.VoucherGeneralResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.VoucherGeneralResponse}
 */
proto.dylk.VoucherGeneralResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReturncode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnmessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.VoucherGeneralResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.VoucherGeneralResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.VoucherGeneralResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.VoucherGeneralResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturncode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReturnmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 returnCode = 1;
 * @return {number}
 */
proto.dylk.VoucherGeneralResponse.prototype.getReturncode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.VoucherGeneralResponse} returns this
 */
proto.dylk.VoucherGeneralResponse.prototype.setReturncode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string returnMessage = 2;
 * @return {string}
 */
proto.dylk.VoucherGeneralResponse.prototype.getReturnmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.VoucherGeneralResponse} returns this
 */
proto.dylk.VoucherGeneralResponse.prototype.setReturnmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.dylk);
