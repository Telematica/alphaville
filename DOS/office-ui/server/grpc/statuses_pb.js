// source: statuses.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.dylk.Status', null, global);
goog.exportSymbol('proto.dylk.StatusListResponse', null, global);
goog.exportSymbol('proto.dylk.StatusParam', null, global);
goog.exportSymbol('proto.dylk.StatusParams', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.Status.displayName = 'proto.dylk.Status';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.StatusParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.StatusParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.StatusParam.displayName = 'proto.dylk.StatusParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.StatusParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.StatusParams.repeatedFields_, null);
};
goog.inherits(proto.dylk.StatusParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.StatusParams.displayName = 'proto.dylk.StatusParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.StatusListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.StatusListResponse.repeatedFields_, null);
};
goog.inherits(proto.dylk.StatusListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.StatusListResponse.displayName = 'proto.dylk.StatusListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.Status}
 */
proto.dylk.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.Status;
  return proto.dylk.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.Status}
 */
proto.dylk.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dylk.Status.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.Status} returns this
 */
proto.dylk.Status.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.dylk.Status.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Status} returns this
 */
proto.dylk.Status.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.dylk.Status.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.Status} returns this
 */
proto.dylk.Status.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.StatusParam.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.StatusParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.StatusParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.StatusParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.StatusParam}
 */
proto.dylk.StatusParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.StatusParam;
  return proto.dylk.StatusParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.StatusParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.StatusParam}
 */
proto.dylk.StatusParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.StatusParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.StatusParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.StatusParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.StatusParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dylk.StatusParam.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.StatusParam} returns this
 */
proto.dylk.StatusParam.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.dylk.StatusParam.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.StatusParam} returns this
 */
proto.dylk.StatusParam.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.StatusParams.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.StatusParams.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.StatusParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.StatusParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.StatusParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    paramlistList: jspb.Message.toObjectList(msg.getParamlistList(),
    proto.dylk.StatusParam.toObject, includeInstance),
    pageparamlistList: jspb.Message.toObjectList(msg.getPageparamlistList(),
    proto.dylk.StatusParam.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.StatusParams}
 */
proto.dylk.StatusParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.StatusParams;
  return proto.dylk.StatusParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.StatusParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.StatusParams}
 */
proto.dylk.StatusParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dylk.StatusParam;
      reader.readMessage(value,proto.dylk.StatusParam.deserializeBinaryFromReader);
      msg.addParamlist(value);
      break;
    case 2:
      var value = new proto.dylk.StatusParam;
      reader.readMessage(value,proto.dylk.StatusParam.deserializeBinaryFromReader);
      msg.addPageparamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.StatusParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.StatusParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.StatusParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.StatusParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dylk.StatusParam.serializeBinaryToWriter
    );
  }
  f = message.getPageparamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.dylk.StatusParam.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StatusParam paramList = 1;
 * @return {!Array<!proto.dylk.StatusParam>}
 */
proto.dylk.StatusParams.prototype.getParamlistList = function() {
  return /** @type{!Array<!proto.dylk.StatusParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.StatusParam, 1));
};


/**
 * @param {!Array<!proto.dylk.StatusParam>} value
 * @return {!proto.dylk.StatusParams} returns this
*/
proto.dylk.StatusParams.prototype.setParamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.dylk.StatusParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.StatusParam}
 */
proto.dylk.StatusParams.prototype.addParamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dylk.StatusParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.StatusParams} returns this
 */
proto.dylk.StatusParams.prototype.clearParamlistList = function() {
  return this.setParamlistList([]);
};


/**
 * repeated StatusParam pageParamList = 2;
 * @return {!Array<!proto.dylk.StatusParam>}
 */
proto.dylk.StatusParams.prototype.getPageparamlistList = function() {
  return /** @type{!Array<!proto.dylk.StatusParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.StatusParam, 2));
};


/**
 * @param {!Array<!proto.dylk.StatusParam>} value
 * @return {!proto.dylk.StatusParams} returns this
*/
proto.dylk.StatusParams.prototype.setPageparamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.dylk.StatusParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.StatusParam}
 */
proto.dylk.StatusParams.prototype.addPageparamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dylk.StatusParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.StatusParams} returns this
 */
proto.dylk.StatusParams.prototype.clearPageparamlistList = function() {
  return this.setPageparamlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.StatusListResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.StatusListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.StatusListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.StatusListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.StatusListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    returncode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    returnmessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    statuslistList: jspb.Message.toObjectList(msg.getStatuslistList(),
    proto.dylk.Status.toObject, includeInstance),
    totalitems: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalpages: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.StatusListResponse}
 */
proto.dylk.StatusListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.StatusListResponse;
  return proto.dylk.StatusListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.StatusListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.StatusListResponse}
 */
proto.dylk.StatusListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReturncode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnmessage(value);
      break;
    case 3:
      var value = new proto.dylk.Status;
      reader.readMessage(value,proto.dylk.Status.deserializeBinaryFromReader);
      msg.addStatuslist(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalitems(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.StatusListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.StatusListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.StatusListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.StatusListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturncode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReturnmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatuslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.dylk.Status.serializeBinaryToWriter
    );
  }
  f = message.getTotalitems();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTotalpages();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 returnCode = 1;
 * @return {number}
 */
proto.dylk.StatusListResponse.prototype.getReturncode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.StatusListResponse} returns this
 */
proto.dylk.StatusListResponse.prototype.setReturncode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string returnMessage = 2;
 * @return {string}
 */
proto.dylk.StatusListResponse.prototype.getReturnmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.StatusListResponse} returns this
 */
proto.dylk.StatusListResponse.prototype.setReturnmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Status statusList = 3;
 * @return {!Array<!proto.dylk.Status>}
 */
proto.dylk.StatusListResponse.prototype.getStatuslistList = function() {
  return /** @type{!Array<!proto.dylk.Status>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.Status, 3));
};


/**
 * @param {!Array<!proto.dylk.Status>} value
 * @return {!proto.dylk.StatusListResponse} returns this
*/
proto.dylk.StatusListResponse.prototype.setStatuslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.dylk.Status=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.Status}
 */
proto.dylk.StatusListResponse.prototype.addStatuslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.dylk.Status, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.StatusListResponse} returns this
 */
proto.dylk.StatusListResponse.prototype.clearStatuslistList = function() {
  return this.setStatuslistList([]);
};


/**
 * optional int32 totalItems = 4;
 * @return {number}
 */
proto.dylk.StatusListResponse.prototype.getTotalitems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.StatusListResponse} returns this
 */
proto.dylk.StatusListResponse.prototype.setTotalitems = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 totalPages = 5;
 * @return {number}
 */
proto.dylk.StatusListResponse.prototype.getTotalpages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.StatusListResponse} returns this
 */
proto.dylk.StatusListResponse.prototype.setTotalpages = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


goog.object.extend(exports, proto.dylk);
